#!/usr/bin/perl -w
#
# ======================================================
#   CONNTRACK-VIEWER version 1.3
#   http://cv.intellos.net
#
#   by Patrick Lagace patou@sympatico.ca
#
# ======================================================
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

use Socket;

# Default value
$dnsresolution=1;
$masqueradeonly=0;
$directonly=0;
$showheader=1;
$titre="Active Connections according to /proc/net/ip_conntrack";

# ======================================================
#    READ THE COMMAND LINE SWITCH
# ======================================================
if (($#ARGV)>-1){
   for ($a=0;$a<($#ARGV+1);$a=$a+1){
      if ($ARGV[$a] eq "-n"){
         $dnsresolution=0;
      } elsif ($ARGV[$a] eq "-nh"){
         $showheader=0;
      } elsif ($ARGV[$a] eq "-m"){
         $masqueradeonly=1;
         $titre="Active MASQUERADED Connections according to /proc/net/ip_conntrack";
      } elsif ($ARGV[$a] eq "-d"){
         $directonly=1;
         $titre="Active DIRECT Connections according to /proc/net/ip_conntrack";
      } else {
         print "USAGE: ./conntrack-viewer [-n][-m][-d][-nh][-h]\n";
         print "-n      Numeric form only, no dns resolution (this is faster)\n";
         print "-m      Masqueraded connections only\n";
         print "-d      Direct connections only\n";
         print "-nh     Results only, hide header\n";
         print "-h      Print this help\n";
         exit 1;
      } 
   }
}


# ======================================================
#    GET IP_CONNTRACK CONTENT
# ======================================================
open (PROCNETBUFF,"< /proc/net/ip_conntrack");
   @ip_conntrack_brut = <PROCNETBUFF>;
close (PROCNETBUFF);


# ======================================================
#    HEADER DISPLAY
# ======================================================
if ($showheader){
   print "$titre\n";
   print "Proto   Source Address           Remote Address           Service     State       ";
   if (!$masqueradeonly && !$directonly){
      print "Masq";
   }
   if ($dnsresolution){
      print "  Name Resolution";
   }
   print "\n";
}


# ======================================================
#    INTERPRETATING  EACH LINE
# ======================================================
foreach (@ip_conntrack_brut){
   $_=~ s/\[\S+\]\s//;
   $proto=$_;

   if (/tcp/){
      $proto =~ s/(\w+)\s+(\d+)\s(\S+)\s(\w+)\ssrc=(\S+)\sdst=(\S+)\ssport=(\S+)\sdport=(\S+)\s+src=(\S+)\sdst=(\S+)\ssport=(\S+)\sdport=(\S+)\s+use=(\S+)\s*\n/$1/;
      $state     = $4;
      $srcaddr   = $5;
      $dstaddr   = $6;
      $srcport   = $7;
      $dstport   = $8;
      $plpl      = $10;

   } elsif (/udp/){
      $proto =~ s/(\w+)\s+(\d+)\s(\S+)\ssrc=(\S+)\sdst=(\S+)\ssport=(\S+)\sdport=(\S+)\s+src=(\S+)\sdst=(\S+)\ssport=(\S+)\sdport=(\S+)\s+use=(\S+)\s*\n/$1/;
      $state     = "           ";
      $srcaddr   = $4;
      $dstaddr   = $5;
      $srcport   = $6;
      $dstport   = $7;
      $plpl      = $9;
   }  
   $srcportname="";
   $dstportname="";
   if ($srcportname = getservbyport $srcport,$proto){ } else {$srcportname = "[???]";};
   if ($dstportname = getservbyport $dstport,$proto){ } else {$dstportname = "[???]";};
   if ($srcportname eq "[???]" && $dstportname eq "[???]"){$portname="[???]";}
   if ($srcportname ne "[???]" && $dstportname eq "[???]"){$portname=$srcportname;}
   if ($srcportname eq "[???]" && $dstportname ne "[???]"){$portname=$dstportname;}
   if ($srcportname ne "[???]" && $dstportname ne "[???]"){$portname=$srcportname."-".$dstportname."\t";}




   # ======================================================
   #    CALCULATE THE SPACE TO COMPLETE EACH COLUMN
   # ======================================================
   $spacesource="";
   for($nbspace=1;$nbspace<25-((length $srcaddr)+(length $srcport));$nbspace=$nbspace+1){
      $spacesource=$spacesource." ";
   }

   $spacedestination="";
   for($nbspace=1;$nbspace<25-((length $dstaddr)+(length $dstport));$nbspace=$nbspace+1){
      $spacedestination=$spacedestination." ";
   }

   $spaceport="";
   for($nbspace=1;$nbspace<13-(length $portname);$nbspace=$nbspace+1){
      $spaceport=$spaceport." ";
   }

   $spacestate="";
   for($nbspace=1;$nbspace<15-(length $state);$nbspace=$nbspace+1){
      $spacestate=$spacestate." ";
   }

   # ======================================================
   #    DISPLAYS THE RESULTS
   # ======================================================
   if (($masqueradeonly && ($srcaddr ne $plpl)) || (!$masqueradeonly && !$directonly)){
      print "$proto\t$srcaddr:$srcport"."$spacesource"."$dstaddr:$dstport"."$spacedestination"."$portname".$spaceport."$state"."$spacestate";
      
      if (!$masqueradeonly && !$directonly){
         if ($srcaddr ne $plpl){
            print "M\t";
         }else{
            print " \t";
         }
      }

      if ($dnsresolution){
         if ($srcname = gethostbyaddr(inet_aton($srcaddr),AF_INET)){ } else {$srcname = "UNRESOLVED!";};
         if ($dstname = gethostbyaddr(inet_aton($dstaddr),AF_INET)){ } else {$dstname = "UNRESOLVED!";};
         print "$srcname > $dstname";
      }
      print "\n";
   }elsif ($directonly && ($srcaddr eq $plpl)) {
      print "$proto\t$srcaddr:$srcport"."$spacesource"."$dstaddr:$dstport"."$spacedestination"."$portname".$spaceport."$state";

      if ($dnsresolution){
         if ($srcname = gethostbyaddr(inet_aton($srcaddr),AF_INET)){ } else {$srcname = "UNRESOLVED!";};
         if ($dstname = gethostbyaddr(inet_aton($dstaddr),AF_INET)){ } else {$dstname = "UNRESOLVED!";};
         print "$spacestate"."$srcname > $dstname";
      }
      print "\n";
   }
}

exit;

__END__




